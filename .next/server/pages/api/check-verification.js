"use strict";(()=>{var e={};e.id=284,e.ids=[284],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6090:e=>{e.exports=import("stripe")},5533:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>d,default:()=>u,routeModule:()=>l});var i=r(1802),s=r(7153),n=r(6249),o=r(6273),c=e([o]);o=(c.then?(await c)():c)[0];let u=(0,n.l)(o,"default"),d=(0,n.l)(o,"config"),l=new i.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/check-verification",pathname:"/api/check-verification",bundlePath:"",filename:""},userland:o});a()}catch(e){a(e)}})},6273:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{default:()=>handler});var i=r(6090),s=e([i]);i=(s.then?(await s)():s)[0];let n=new i.default(process.env.STRIPE_SECRET_KEY);async function handler(e,t){let{session_id:r}=e.query;if(!r)return t.status(400).json({error:"Missing session_id parameter"});try{let e=await n.identity.verificationSessions.retrieve(r);t.status(200).json({status:e.status})}catch(e){console.error("Error retrieving verification session:",e),t.status(500).json({error:e.message})}}a()}catch(e){a(e)}})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(5533));module.exports=r})();